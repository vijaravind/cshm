function [arg] = bsp_arg(P, M)
% 
% bsp_arg Calculates geometric shape arguments and mass prediction in
% accordance to the modified Hanavan model

% arg = structure containing the following fields:
%       hand
%       forearm
%       upperarm
%       foot
%       shank
%       thigh
%       head
%       utrunk (upper trunk)
%       mtrunk (middle trunk)
%       ltrunk (lower trunk)
%       
% Each field contains the BSP arguments for the segment, denoted by the
% following fields:
%       shape   : shape of the body segment
%       geo_arg : measurements of the body segment
%       mass    : mass predicted of the body segment
%       CoM     : z element of COM position (x = y = 0)
%       I       : intertia matrix diagonal
% 
% P = [P_1 : P_41]
% M = Whole body mass
%
% @author : Mathias, Dyma
% NOTE: Symmetry from left to right is assumed

addpath('./geometry/');

% %%%%%%%%% SHAPES (arg.x.shape) %%%%%%%%%

shape = {'ER';'TTC';'TTC';'ESBase';'TTC';'ESTop';'ER';'EC';'ES';'EC'};

% %%%%%%%%% GEOMETRIC ARGUMENTS (arg.x.geo_arg) %%%%%%%%%

ghand    = struct(  'a', P(14)/(2*pi), ...
                    'c', P(2)/2);
gforearm = struct(  'a0', P(17)/(2*pi), ...
                    'a1', P(15)/(2*pi), ...
                    'L', P(3));
gupperarm= struct(  'a0', P(18)/(2*pi), ...
                    'a1', P(17)/(2*pi), ...
                    'L', P(5));
gfoot    = struct(  'a0', P(19)/(2*pi), ...
                    'a1', (P(33)+P(34))/4, ...
                    'b1', (P(20)+P(21))/(2*pi), ...
                    'L', P(5));
gshank   = struct(  'a0', P(24)/(2*pi), ...
                    'a1', P(22)/(2*pi), ...
                    'L', P(7));
gthigh   = struct(  'a0', P(25)/pi - P(35)/2, ...
                    'b0', P(35)/2, ...
                    'a1', P(24)/(2*pi), ...
                    'L', P(8));
ghead    = struct(  'a', P(26)/(2*pi), ...
                    'c', P(9)/2);
gutrunk  = struct(  'a0', (P(36)+P(37))/4, ...
                    'b0', (P(27)+P(28))/(2*pi)-(P(36)+P(37))/4, ...
                    'L', P(11));
gmtrunk  = struct(  'a0', P(37)/2, ...
                    'a1', P(38)/2, ...
                    'b0', P(28)/pi-P(37)/2, ...
                    'b1', P(29)/pi-P(38)/2, ...
                    'L', P(12));
gltrunk  = struct(  'a0', (P(38)+P(39))/4, ...
                    'b0', (P(29)+P(30))/(2*pi)-(P(38)+P(39))/4, ...
                    'L', P(13));


% %%%%%%%%% MASS PREDICTION (arg.x.mass) %%%%%%%%%

% m = [Hand Forearm UpperArm Foot Shank Thigh Head UTrunk MTrunk LTrunk].'
% V = [V_ut V_mt V_lt].'

m = zeros(10,1);
V = [   pi*gutrunk.L*A1([gutrunk.a0; gutrunk.a0],[gutrunk.b0; gutrunk.b0]); ...
        pi*gmtrunk.L*A1([gmtrunk.a0; gmtrunk.a1],[gmtrunk.b0; gmtrunk.b1]); ...
        pi*gltrunk.L*A1([gltrunk.a0; gltrunk.a0],[gltrunk.b0; gltrunk.b0])   ];

m(1) = 0.038*P(15) + 0.080*P(32) - 0.660;
m(2) = 0.081*M + 0.052*P(16) - 1.650;
m(3) = 0.007*M + 0.092*P(18) + 0.050*P(5) - 3.101;
m(4) = 0.003*M + 0.048*P(22) + 0.027*P(6) - 0.869;
m(5) = 0.135*P(23) - 1.318;
m(6) = 0.074*M + 0.138*P(25) - 4.641;
m(7) = 0.104*P(26) + 0.015*M - 2.189;

mWT = 0.349*M + 0.423*P(41) + 0.229*P(27) - 35.460;
sf = mWT/(0.92*V(1) + 1.01*(V(2)+V(3)));

m(8) = 0.92*V(1)*sf;
m(9) = 1.01*V(2)*sf;
m(10) = 1.01*V(3)*sf;

% %%%%%%%%% COM & INTERTIA MATRIX (arg.x.COM, arg.x.I) %%%%%%%%%

% CoM = [Hand Forearm UpperArm Foot Shank Thigh Head UTrunk MTrunk LTrunk].'
% I = [Hand Forearm UpperArm Foot Shank Thigh Head UTrunk MTrunk LTrunk].'

CoMI = zeros(10,4);

[CoM, Ixx, Iyy, Izz] = get_inertia(m(1), shape(1), ghand);
CoMI(1,1:4) = [CoM Ixx Iyy Izz];
[CoM, Ixx, Iyy, Izz] = get_inertia(m(2), shape(2), gforearm);
CoMI(2,1:4) = [CoM Ixx Iyy Izz];
[CoM, Ixx, Iyy, Izz] = get_inertia(m(3), shape(3), gupperarm);
CoMI(3,1:4) = [CoM Ixx Iyy Izz];
[CoM, Ixx, Iyy, Izz] = get_inertia(m(4), shape(4), gfoot);
CoMI(4,1:4) = [CoM Ixx Iyy Izz];
[CoM, Ixx, Iyy, Izz] = get_inertia(m(5), shape(5), gshank);
CoMI(5,1:4) = [CoM Ixx Iyy Izz];
[CoM, Ixx, Iyy, Izz] = get_inertia(m(6), shape(6), gthigh);
CoMI(6,1:4) = [CoM Ixx Iyy Izz];
[CoM, Ixx, Iyy, Izz] = get_inertia(m(7), shape(7), ghead);
CoMI(7,1:4) = [CoM Ixx Iyy Izz];
[CoM, Ixx, Iyy, Izz] = get_inertia(m(8), shape(8), gutrunk);
CoMI(8,1:4) = [CoM Ixx Iyy Izz];
[CoM, Ixx, Iyy, Izz] = get_inertia(m(9), shape(9), gmtrunk);
CoMI(9,1:4) = [CoM Ixx Iyy Izz];
[CoM, Ixx, Iyy, Izz] = get_inertia(m(10), shape(10), gltrunk);
CoMI(10,1:4) = [CoM Ixx Iyy Izz];

% %%%%%%%%% GROUPING %%%%%%%%%

% upperarm= struct(   'shape', shape(3), ...
%                     'geo_arg', gupperarm, ...
%                     'mass', m, ...
%                     'COM', COM(3), ...
%                     'I', I(3));

hand    = struct(   'shape', shape(1), ...
                    'geo_arg', ghand, ...
                    'mass', m(1), ...
                    'CoM', CoMI(1,1), ...
                    'I', CoMI(1,2:4).');
forearm = struct(   'shape', shape(2), ...
                    'geo_arg', gforearm, ...
                    'mass', m(2), ...
                    'CoM', CoMI(2,1), ...
                    'I', CoMI(2,2:4).');
upperarm= struct(   'shape', shape(3), ...
                    'geo_arg', gupperarm, ...
                    'mass', m(3), ...
                    'CoM', CoMI(3,1), ...
                    'I', CoMI(3,2:4).');
foot    = struct(   'shape', shape(4), ...
                    'geo_arg', gfoot, ...
                    'mass', m(4), ...
                    'CoM', CoMI(4,1), ...
                    'I', CoMI(4,2:4).');
shank   = struct(   'shape', shape(5), ...
                    'geo_arg', gshank, ...
                    'mass', m(5), ...
                    'CoM', CoMI(5,1), ...
                    'I', CoMI(5,2:4).');
thigh   = struct(   'shape', shape(6), ...
                    'geo_arg', gthigh, ...
                    'mass', m(6), ...
                    'CoM', CoMI(6,1), ...
                    'I', CoMI(6,2:4).');
head    = struct(   'shape', shape(7), ...
                    'geo_arg', ghead, ...
                    'mass', m(7), ...
                    'CoM', CoMI(7,1), ...
                    'I', CoMI(7,2:4).');
utrunk  = struct(   'shape', shape(8), ...
                    'geo_arg', gutrunk, ...
                    'mass', m(8), ...
                    'CoM', CoMI(8,1), ...
                    'I', CoMI(8,2:4).');
mtrunk  = struct(   'shape', shape(9), ...
                    'geo_arg', gmtrunk, ...
                    'mass', m(9), ...
                    'CoM', CoMI(9,1), ...
                    'I', CoMI(9,2:4).');
ltrunk  = struct(   'shape', shape(10), ...
                    'geo_arg', gltrunk, ...
                    'mass', m(10), ...
                    'CoM', CoMI(10,1), ...
                    'I', CoMI(10,2:4).');

arg     = struct('hand',     hand,      ...
                 'forearm',  forearm,   ...
                 'upperarm', upperarm,  ...
                 'foot',     foot,      ...
                 'shank',    shank,     ...
                 'thigh',    thigh,     ...
                 'head',     head,      ...
                 'utrunk',   utrunk,    ...
                 'mtrunk',   mtrunk,    ...
                 'ltrunk',   ltrunk);

end

